import streamlit as st
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import letter
import io

# --- Title ---
st.set_page_config(page_title="Deep Personality Quiz", layout="centered")
st.title("ðŸ§  Deep Personality Quiz")

# --- Sample result (replace with your actual logic) ---
best = "The Visionary"  # Assume result of quiz
best_match_percentage = 87  # Assume match percentage

# --- Personality Descriptions ---
profile_descriptions = {
    "The Architect": "You are a strategic thinker who loves planning and solving complex problems.",
    "The Visionary": "You are imaginative, curious, and always thinking ahead.",
    "The Mediator": "You are empathetic and diplomatic, always seeking harmony.",
    "The Commander": "You are confident and strong-willed, a natural leader.",
    "The Adventurer": "You live for the moment and bring joy wherever you go.",
    "The Analyst": "You are logical, skeptical, and always seeking truth.",
    "The Diplomat": "You are guided by strong values and empathy.",
    "The Sentinel": "You are reliable, responsible, and grounded in tradition.",
    "The Explorer": "You are curious and constantly seeking new experiences."
}

# --- Input Name ---
user_name = st.text_input("Enter your name to receive your personalized certificate:")

# --- Show Personality ---
if best:
    st.subheader("ðŸ§¬ Your Personality Match:")
    st.success(f"**{best}** â€“ {best_match_percentage}% match")
    st.info(profile_descriptions.get(best, "No description available for this personality type."))

# --- Show Certificate ---
if user_name:
    st.markdown("## ðŸŽ“ Your Personality Certificate")
    st.markdown(f"""
    <div style="border: 2px solid #FFD700; padding: 25px; border-radius: 15px; background-color: #fdf6e3; text-align: center;">
        <h2 style="color:#8B0000;">Certificate of Personality</h2>
        <p>This certifies that</p>
        <h1 style="color:#4682B4;">{user_name}</h1>
        <p>has been identified as a</p>
        <h2 style="color:#556B2F;">{best}</h2>
        <p>with a match score of <strong>{best_match_percentage}%</strong></p>
    </div>
    """, unsafe_allow_html=True)

    # --- Create PDF ---
    def create_pdf(name, profile, match_percent):
        buffer = io.BytesIO()
        c = canvas.Canvas(buffer, pagesize=letter)
        width, height = letter
        c.setFont("Helvetica-Bold", 20)
        c.drawCentredString(width / 2, height - 100, "Certificate of Personality")
        c.setFont("Helvetica", 14)
        c.drawCentredString(width / 2, height - 140, f"This certifies that")
        c.setFont("Helvetica-Bold", 18)
        c.drawCentredString(width / 2, height - 170, name)
        c.setFont("Helvetica", 14)
        c.drawCentredString(width / 2, height - 200, f"has been identified as a")
        c.setFont("Helvetica-Bold", 16)
        c.drawCentredString(width / 2, height - 230, profile)
        c.setFont("Helvetica", 14)
        c.drawCentredString(width / 2, height - 260, f"with a match score of {match_percent}%")
        c.setFont("Helvetica-Oblique", 10)
        c.drawCentredString(width / 2, 50, "Generated by Deep Personality Quiz")
        c.showPage()
        c.save()
        buffer.seek(0)
        return buffer

    # --- Download PDF ---
    pdf_data = create_pdf(user_name, best, best_match_percentage)
    st.download_button("ðŸ“„ Download Your Certificate (PDF)", data=pdf_data,
                       file_name=f"{user_name}_Personality_Certificate.pdf", mime="application/pdf")
